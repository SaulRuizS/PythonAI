# -*- coding: utf-8 -*-
"""tensores_pytorch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pDFzlM_3SVl-KAv3lUg28mQXel_2lcbI

Trabajando con tensores.
"""

import torch
import numpy as np

torch.__version__

tensor_a = torch.ones(2, 2)
# """
# Tensor con solo numeros uno como valores
# """
tensor_a

tensor_b = torch.Tensor(2, 2)
# """
# Tensor con valores aleatorios, esto por la "T" mayuscula
# """
print(tensor_b)

tensor_b.uniform_(0, 2)
# """
# Uniforma los valores del tensor dentro del rango especificado
# """

tensor_c = torch.rand(2, 2)
# """
# Tensor con valores aleatorios entre 0 y 1
# """
tensor_c

resultado = tensor_b + tensor_c
# """
# Suma de tensores
# """
resultado

resultado.shape
# """
# Imprime la forma del tensor
# """
reshaped = resultado.view(1, 4)
# """
# Redimensiona el tensor
# """
reshaped

puntos = torch.tensor([[1.0, 2.0], [3.0, 4.0]])
# """
# Tensor con valor asignados
# """
print(puntos)
puntos.storage()
# """
# Almacenamiento de los valores
# """

# Pasos requeridos para llegar al siguiente elemento del tensor
puntos.stride()

p_t = puntos.t()
# Traspuesta del tensor

p_t, p_t.stride()

tensor_d = torch.tensor([1, 2, 3, 4])

print(tensor_d) 
torch.unsqueeze(tensor_d, 1)
#Agrega dimensiones al tensor

numpyArray = np.random.randn(2, 2)
torch.from_numpy(numpyArray)